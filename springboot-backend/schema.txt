every person is a USER

USER -> 3 ROLES --- ADMIN, STUDENT, FACULTY
                        |          | 
                    max. role   min

CRUD -> CREATE READ UPDATE DELETE
ADMIN -> fee tickets(crud), courses(crud), enrollments(crud)
FACULTY-> marks(crud), enrollments(ru)
STUDENT-> fee tickets(ru), marks(r), enrollments(ru)

[[[[[[[[[[[[[[[[[[[models]]]]]]]]]]]]]]]]]]]
1.) User: fac-> taught, student->fees, enrollments, marks
2.) Enrollment: student->registered/unregistered(3 types of fees), courses, semester
3.) Marks-> semster, student, course
4.) Fees-> amount, semseter, type, isPaid
5.) Course-> faculty, students, marks

[x] payment integration
[y] jwt authentication
[y] frontend sql injection resistant because we used JPA repository methods






[[[[[[[[[[[[[]]]]]]]]]]]]]
-> controller, repository, service, "modelClass"

-> modelClass: entity define()

"repository" -> modelclass entities operations on them CRUD
service -> repository methods call to do crud
"controller" -> routing establish that at \path GET will take place and we use methods provided by service

pgAdmin -> db link postgresql for crud operartions
springboot ->
angular 



[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]
postman: 
postman ->